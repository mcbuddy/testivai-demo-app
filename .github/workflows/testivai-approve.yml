name: TestivAI Approve Visuals Comment

on:
  issue_comment:
    types: [created]

jobs:
  process-approval:
    runs-on: ubuntu-latest
    # Only run on PR comments that contain the approval command
    if: |
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '/approve-visuals')
    
    permissions:
      contents: write  # Needed to push changes back to the branch
      pull-requests: write  # Needed to comment on PRs
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.issue.pull_request.head.ref }}
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
      
      - name: Get commenter info
        id: commenter
        run: |
          echo "username=${{ github.event.comment.user.login }}" >> $GITHUB_OUTPUT
          echo "email=${{ github.event.comment.user.login }}@users.noreply.github.com" >> $GITHUB_OUTPUT
      
      - name: Generate approvals.json
        run: |
          mkdir -p .testivai/visual-regression
          cat > .testivai/visual-regression/approvals.json << 'EOF'
          {
            "approved": ["ALL"],
            "rejected": [],
            "new": [],
            "deleted": [],
            "meta": {
              "author": "${{ steps.commenter.outputs.username }}",
              "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
              "source": "GitHub PR #${{ github.event.issue.number }}",
              "pr_url": "https://github.com/${{ github.repository }}/pull/${{ github.event.issue.number }}",
              "commit_sha": "${{ github.sha }}",
              "commit_url": "https://github.com/${{ github.repository }}/commit/${{ github.sha }}"
            }
          }
          EOF
      
      - name: Install TestivAI globally
        run: npm install -g testivai
      
      - name: Run TestivAI compare with update baselines
        run: testivai compare --update-baselines
      
      - name: Configure Git
        run: |
          git config user.name "${{ steps.commenter.outputs.username }}"
          git config user.email "${{ steps.commenter.outputs.email }}"
      
      - name: Commit and push changes
        run: |
          git add .
          git diff --staged --quiet || git commit -m "chore: update visual regression baselines [skip ci]"
          git push origin ${{ github.event.issue.pull_request.head.ref }}
      
      - name: Comment on PR with results
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const message = 'âœ… Visual regression changes approved and baselines updated!\n\n' +
                           'All visual changes have been approved and the baseline images have been updated.';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });
